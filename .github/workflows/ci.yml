name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  quality:
    name: Code Quality
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma Client
        run: npm run db:generate
        env:
          DATABASE_URL: "postgresql://user:password@localhost:5432/test"

      - name: Type check
        run: npm run type-check

      - name: Lint check
        run: npm run lint

      - name: Format check
        run: npm run format:check

      - name: Build
        run: npm run build
        env:
          SKIP_ENV_VALIDATION: true
          DATABASE_URL: "postgresql://user:password@localhost:5432/test"
          NEXTAUTH_SECRET: "test-secret-for-ci-only"
          NEXTAUTH_URL: "http://localhost:3000"

  build:
    name: Build Check
    runs-on: ubuntu-latest
    needs: quality

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma Client
        run: npm run db:generate
        env:
          DATABASE_URL: "postgresql://user:password@localhost:5432/test"

      - name: Build application
        run: npm run build
        env:
          SKIP_ENV_VALIDATION: true
          DATABASE_URL: "postgresql://user:password@localhost:5432/test"
          NEXTAUTH_SECRET: "test-secret-for-ci-only"
          NEXTAUTH_URL: "http://localhost:3000"